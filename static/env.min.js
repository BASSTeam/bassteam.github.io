const passThrough=["href","protocol","host","hostname","port","pathname","search","hash","origin"],readonly=["origin","toString","assign","reload","replace"],target=new class{get notSupported(){console.warn("window.location seems to be an another Location object. So nothing to do here")}};class Location{constructor(o){if("string"!=typeof o)throw new TypeError("Class constructor Location cannot be invoked without first string argument");const t=document.createElement("a");return t.href=o,new Proxy({toString:()=>t.href,assign:o=>t.href=o,reload:()=>target.notSupported,replace:()=>target.notSupported},{set(o,e,r){if(-1!=readonly.indexOf(e))throw new TypeError(`Cannot assign to read only property '${e}' of object '[object Location]'`);return(-1!=passThrough.indexOf(e)?t:o)[e]=r,!0},get:(o,e)=>(passThrough.indexOf(e)+1?t:o)[e]})}}exports.Location=Location;